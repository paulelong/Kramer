//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyMixes {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class AppResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal AppResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MyMixes.AppResources", typeof(AppResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel.
        /// </summary>
        internal static string Cancel {
            get {
                return ResourceManager.GetString("Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete.
        /// </summary>
        internal static string Continue {
            get {
                return ResourceManager.GetString("Continue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your playlist is empty.  Choose mixes from the music project folders and add them to the playlist.  Select the play button next to a mix to audition it.  Resfresh by pulling down the list.
        ///
        ///After you add mixes you want to audition, return to the main page and play and/or take notes..
        /// </summary>
        internal static string MixLocationsNoPlaylist {
            get {
                return ResourceManager.GetString("MixLocationsNoPlaylist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Build your playlist.
        /// </summary>
        internal static string MixLocationsNoPlaylistTitle {
            get {
                return ResourceManager.GetString("MixLocationsNoPlaylistTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mix locations that you add appear at the top of the screen.  A mix location is a folder in your cloud storage that contains projects, where each project contains the songs you&apos;ve mixed and saved with your DAW.
        ///
        ///Connect to your cloud storage by selecting a provider.  After providing credentials, you will see all folders in the root of your cloud storage.  Navigate and select the folder which contain your projects and press the Add button to add a Mix Location which will be synchronized to your device when  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string NoMixLocations {
            get {
                return ResourceManager.GetString("NoMixLocations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Mix Locations.
        /// </summary>
        internal static string NoMixLocationsTitle {
            get {
                return ResourceManager.GetString("NoMixLocationsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The main screen displays your Playlist, which is currently empty.  Your playlist contains mixes you are currently evaluating.  Each mix can be notated, like &quot;verse louder&quot; or &quot;more cowbell&quot;.
        ///
        ///Add any mixes from you master list using the Add Music button at the bottom..
        /// </summary>
        internal static string NoPlaylist {
            get {
                return ResourceManager.GetString("NoPlaylist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your playlist is empty.
        /// </summary>
        internal static string NoPlaylistTitle {
            get {
                return ResourceManager.GetString("NoPlaylistTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This screen displays all of your projects that exist in the cloud mix locations you&apos;ve configured.  A cloud mix location is a folder in your cloud storage which contains project folders.  Each project folder contains songs.
        ///
        ///The list of projects is empty because you haven&apos;t add your first cloud locaiton.  To add the first cloud location, use the Add Cloud button at the bottom..
        /// </summary>
        internal static string NoProjects {
            get {
                return ResourceManager.GetString("NoProjects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Song to Playlist.
        /// </summary>
        internal static string NoProjectsTitle {
            get {
                return ResourceManager.GetString("NoProjectsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OK.
        /// </summary>
        internal static string OK {
            get {
                return ResourceManager.GetString("OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This action PERMANENTLY removes the project from this device and the cloud, continue?.
        /// </summary>
        internal static string RemoveFolder {
            get {
                return ResourceManager.GetString("RemoveFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The remote project in your cloud storage could not be removed.  Make sure you have access and that the project still exists..
        /// </summary>
        internal static string RemoveFolderRemoteFailed {
            get {
                return ResourceManager.GetString("RemoveFolderRemoteFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not remove the cloud project.
        /// </summary>
        internal static string RemoveFolderRemoteFailedTitle {
            get {
                return ResourceManager.GetString("RemoveFolderRemoteFailedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove folder from device and cloud?.
        /// </summary>
        internal static string RemoveFolderTitle {
            get {
                return ResourceManager.GetString("RemoveFolderTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The song failed to play for an unknown reason.  Check that you can play the original, and varify there are no invalid characters in the name..
        /// </summary>
        internal static string SongPlayFailed {
            get {
                return ResourceManager.GetString("SongPlayFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The song failed to play.
        /// </summary>
        internal static string SongPlayFailedTitle {
            get {
                return ResourceManager.GetString("SongPlayFailedTitle", resourceCulture);
            }
        }
    }
}
