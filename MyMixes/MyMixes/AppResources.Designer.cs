//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyMixes {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class AppResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal AppResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MyMixes.AppResources", typeof(AppResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This screen displays the cloud mix locations you&apos;ve added at the top, which is empty until you add your first.  A mix locations is a folder in your cloud storage that contains your mixing projects. Each project will have songs you&apos;ve mixed from your DAW.   Ideally you can configure your DAW to store mixes in a structure that contains a project folder full of mixed songs\n\r\n\rConnect to your cloud storage by selecting a provider.  After providing credentials, you will see all folders in the root of your cl [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string NoMixLocations {
            get {
                return ResourceManager.GetString("NoMixLocations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Mix Locations.
        /// </summary>
        internal static string NoMixLocationsTitle {
            get {
                return ResourceManager.GetString("NoMixLocationsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This main screen is you Playlist, which is currently empty.  Your playlist contains songs you are currently evaluating.  Each song can be notated. /n/r/n/r Add songs from your master list of projects by using the button at the bottom..
        /// </summary>
        internal static string NoPlaylist {
            get {
                return ResourceManager.GetString("NoPlaylist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add songs to your playlist.
        /// </summary>
        internal static string NoPlaylistTitle {
            get {
                return ResourceManager.GetString("NoPlaylistTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This screen displays all of you projects that exist based on cloud mix locations you&apos;ve configured.  A cloud mix location is a folder in your cloud storage which contains project folders.  Each project folder contains songs.\n\r\n\rThe list of projectrs is empty because you haven&apos;t add your first cloud locaiton.  To add the first cloud location, use the Add Cloud button at the bottom..
        /// </summary>
        internal static string NoProjects {
            get {
                return ResourceManager.GetString("NoProjects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Song to Playlist.
        /// </summary>
        internal static string NoProjectsTitle {
            get {
                return ResourceManager.GetString("NoProjectsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OK.
        /// </summary>
        internal static string OK {
            get {
                return ResourceManager.GetString("OK", resourceCulture);
            }
        }
    }
}
